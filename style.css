/* ------------------------------------------- */
/* PROFESSIONAL & COMPLEX CSS STYLES v7 (Final Orbit Fix) - PINK & DARK MODE */
/* ------------------------------------------- */

/* --- 0. CSS VARIABLES (High Contrast Dark/Pink Theme) --- */

/* === Scroll-linked rotation variables === */
@property --rotate {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --delayed-rotate {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@keyframes scrollAnim {
	to {
		--rotate: 1;
    --delayed-rotate: 1;
	}
}


:root {
  /* Color Palette */
  --color-primary-pink: #FF69B4;        
  --color-accent-pink: #FFC0CB;         
  --color-background-dark: #1A1A1A;     
  --color-background-light: #2A2A2A;    
  --color-text-dark: #F0F0F0;           
  --color-text-dim: #A9A9A9;            
  --color-code-bg: #40254A;             

  /* Typography */
  --font-heading: 'Playfair Display', serif;
  --font-body: 'Poppins', sans-serif;
  --font-code: 'Fira Code', monospace;

  /* Spacing & Effects */
  --spacing-large: 4rem; 
  --spacing-medium: 2rem;
  --border-radius: 12px;
  --shadow-deep: 0 5px 15px rgba(255, 105, 180, 0.2); 
  --nav-height: 70px;
  
  /* NEW VARIABLE for smaller, fixed orbit */
  --fixed-orbit-radius: 90px; /* Tighter radius for the fixed position */

  /* Dynamic Background Colors (Corrected Gradient for JS) */
  --bg-color-1: #11001c; /* Deep Purple */
  --bg-color-2: #220038;
  --bg-color-3: #5a3b75;
  --bg-color-4: #24053b;
  --bg-color-5: #11001c; /* Bright Purple */
  --text-color: #f0f0f0;
  --accent-color: #ff00ff; /* Neon Magenta */
  --font-primary: 'Inter', sans-serif;
  --terminal-shadow: 0 0 10px rgba(255, 0, 255, 0.5), 0 0 20px rgba(255, 0, 255, 0.2);
}

/* --- 1. GLOBAL RESET AND TYPOGRAPHY --- */
@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@600;700&family=Poppins:wght@300;400;600&family=Fira+Code:wght@400&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  transition: all 0.2s ease-out; 
  scroll-behavior: smooth;
  font-family: var(--font-primary);
}

html {
  scroll-behavior: smooth;
  background-color: var(--bg-color-1);
  color: var(--text-color);
}

body {
  color: var(--color-text-dark);
  font-family: var(--font-body);
  line-height: 1.7;
  min-height: 100vh;
  transition: background-color 0.8s ease-out;
  
    animation: scrollAnim linear;
    animation-timeline: scroll(nearest block);
  
}

/* --- STAR FIELD BACKGROUND ANIMATION --- */

/* Positioning the star field container */
.star-field {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; /* Crucial to clip the stars */
  z-index: 1; /* Place behind the name and prompts */
  perspective: 800px; /* Gives the background depth */
}

/* Base Star Layer (Smallest, most numerous, slowest) */
.star-field::before, 
.star-field::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  /* Use CSS shadows to create the stars */
  background: transparent;
  box-shadow: 
      0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff, 0 0 #fff,
      /* Add more star shadows here! (The list is long for density) */
      100vw 100vh #fff, 10vw 50vh #fff, 80vw 20vh #fff, 30vw 90vh #fff, 60vw 40vh #fff, /* example stars */
      /* ... repeat this pattern, varying the x/y positions to fill the screen */
      1vw 1vh #fff, 99vw 2vh #fff, 50vw 80vh #fff, 20vw 15vh #fff, 70vw 70vh #fff, 
      30vw 50vh #fff, 90vw 10vh #fff, 40vw 30vh #fff, 65vw 95vh #fff, 5vw 60vh #fff;

  /* These animations move the star field to simulate scrolling/parallax */
  animation: stars-move 100s linear infinite;
}
/* --- SHOOTING STAR EFFECT --- */

.hero-intro::before {
  content: '';
  position: absolute;
  width: 200px;
  height: 1px;
  /* Create a glowing, tapered tail */
  background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, var(--color-accent-pink) 50%, rgba(255, 255, 255, 0) 100%);
  box-shadow: 0 0 10px var(--color-primary-pink);

  /* Start position (off-screen top-right) */
  top: 0;
  right: 0;
  opacity: 0;
  
  /* Random starting rotation */
  transform: rotate(45deg);

  /* Animation: It appears, moves across the screen, and disappears */
  animation: shooting-star 15s linear infinite;
  animation-delay: 5s; /* Wait 5 seconds before the first star */
}



/* Second Star Layer (Medium size, medium speed) */
.star-field::after {
  left: 200px; /* Slight offset */
  top: 200px;
  box-shadow: 
      10px 10px #FFC0CB, 80vw 70vh #FFC0CB, 40vw 10vh #FFC0CB, 10vw 80vh #FFC0CB,
      20vw 50vh #FFC0CB, 75vw 30vh #FFC0CB, 50vw 90vh #FFC0CB, 15vw 5vh #FFC0CB,
      /* ... repeat this pattern with different x/y positions ... */
      50vw 50vh #FFC0CB, 25vw 25vh #FFC0CB;
  animation: stars-move 150s linear infinite; /* Slower than the first layer */
  transform: scale(1.5); /* Slightly larger */
}

/* Keyframe for the subtle background star movement */
@keyframes stars-move {
  5% { transform: translate(5, 6); }
  100% { transform: translate(100px, 100px); } /* Gentle diagonal scroll */
}

a {
  color: var(--color-primary-pink);
  text-decoration: none;
}

/* ---------------------------------------------------- */
/* --- ANIMATION KEYFRAMES (Clockwise Orbit & Float)--- */
/* ---------------------------------------------------- */

/* Primary rotation for the PARENT orbit element */
@keyframes clockwiseRotation {
  to { transform: rotate(360deg); }
}

/* Counter rotation for the CHILD skill tag to keep text level */
@keyframes counterClockwiseRotation {
  to { transform: rotate(-360deg); }
}

/* Vertical bobbing/floating animation */
@keyframes skillFloat {
  0% {
      transform: translateY(0px) scale(1);
  }
  50% {
      /* Gentle bob and subtle pulse */
      transform: translateY(10px) scale(1.05);
  }
  100% {
      transform: translateY(0px) scale(1);
  }
}

/* Subtle pulsing glow effect for the tag */
@keyframes pulseGlow {
    0% { box-shadow: 0 0 5px var(--color-primary-pink); }
    50% { box-shadow: 0 0 12px var(--color-accent-pink); }
    100% { box-shadow: 0 0 5px var(--color-primary-pink); }
}

@keyframes backgroundPulse {
  0% { background-position: 0% 0%, 0% 0%; }
  100% { background-position: 100% 100%, 0% 0%; }
}

@keyframes nameJumpIn {
  0% { transform: translateY(100vh) scale(0.5); opacity: 0; }
  60% { transform: translateY(-20px) scale(1.1); opacity: 1; }
  100% { transform: translateY(0) scale(1); opacity: 1; }
}

@keyframes blinkCodeCursor {
  50% { border-right-color: transparent; }
}
@keyframes blinkNameCursor {
  50% { border-right-color: transparent; }
}

/* --- ORBIT STRUCTURE STYLES (REQUIRED FOR CLOCK ROTATION) --- */

/* 3. Positioning the skills container (The center point) */
.animated-skills-container {
  position: absolute; 
  top: 5%;
  left: 3%;
  transform-style: preserve-3d;
  perspective: 1000px; 
  width: 1px;
  height: 1px;
  pointer-events: none; 
  z-index: 50; 
  translate: -50% -50%;

  /* Add scroll-based rotation */
  transform: rotate(calc(var(--rotate) * 360deg));
  animation: scrollAnim linear;
  animation-timeline: scroll(nearest block);
}


/* === Items orbiting around === */
.skill {
  position: absolute;
  width: 40px;
  height: 40px;
  background: #fff8ef;
  border-radius: 50%;
  display: grid;
  place-items: center;
  font-size: 1.5rem;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  transform-origin: 100px 100px; /* half the container size (orbit radius) */
  transition: transform 0.3s ease-out;
}

/* Place the skills evenly around a circle */
.skill:nth-child(1) { transform: rotate(0deg) translate(100px); }
.skill:nth-child(2) { transform: rotate(90deg) translate(100px); }
.skill:nth-child(3) { transform: rotate(180deg) translate(100px); }
.skill:nth-child(4) { transform: rotate(270deg) translate(100px); }




/* New class to make the orbit follow the fixed name. */
/* You need to apply this class via JavaScript when the name gets the 'name-fixed' class. */
.animated-skills-container.orbit-follow-name {
    /* Switch to fixed positioning relative to the viewport */
    position: fixed; 
    /* The container is 600px wide/high. To center it on the fixed name (20px left, 15px top), 
       we set its top-left corner by subtracting half its size (300px) from the target center point. */
    top: calc(var(--nav-height) + 15px - 300px); /* Target Center Y - 300px (half height) */
    left: calc(20px - 300px); /* Target Center X - 300px (half width) */
}

/* 4. The rotating wrapper for each skill tag (The orbit path) */
.skill-orbit {
  position: absolute; 
  width: 0; 
  height: 0; 
  top: 50%; /* Center the orbit itself within the container */
  left: 50%;
}

.skill-orbit.floating {
  /* Starts the continuous COUNTER-CLOCKWISE rotation (New Direction) */
  animation: counterClockwiseRotation 35s linear infinite; 
}

/* 5. The skill tag itself - Now with three continuous animations */
.animated-skill-tag {
  position: absolute;
  top: 0;
  left: 0;

  /* Base positioning: Push the tag out along the X-axis (radius) 
     Uses --orbit-radius (JS set for large orbit) by default: */
  transform: translateX(var(--orbit-radius, 250px)); 

  /* Multiple animations: rotation, float, and pulse */
  animation: 
      clockwiseRotation 35s linear infinite, /* Keeps text upright against the parent's counter-clockwise rotation */
      skillFloat 5s ease-in-out infinite alternate, /* Adds vertical bobbing */
      pulseGlow 3s ease-in-out infinite alternate; /* Adds gentle glow pulse */
  
  /* --- Existing tag styling --- */
  font-family: var(--font-code);
  background-color: var(--color-code-bg);
  color: var(--color-accent-pink);
  padding: 8px 15px;
  border-radius: 9999px; /* Rounded pill shape */
  font-size: 0.9em;
  opacity: 0;
  white-space: nowrap;
  border: 1px solid var(--color-primary-pink);
  box-shadow: 0 0 5px rgba(249, 172, 210, 0.5);
  
  /* Transition for initial appearance only */
  transition: opacity 0.4s ease-out;
}

/* Adjust the orbit radius for tags when the container is fixed (smaller orbit) */
.animated-skills-container.orbit-follow-name .animated-skill-tag {
    transform: translateX(var(--fixed-orbit-radius));
}


/* --- START OVERLAY STYLING --- */
#start-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-background-dark); 
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  opacity: 1;
  transition: opacity 0.5s ease-out;
}

#start-button {
  padding: 1rem 2rem;
  font-size: 1.2em;
  background-color: black;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1.25rem;
  font-weight: bold;
  box-shadow: var(--terminal-shadow);
  transition: transform 0.2s, box-shadow 0.2s;
}

#start-button:hover {
  transform: scale(1.05);
  box-shadow: 0 0 15px var(--accent-color), 0 0 30px rgba(255, 0, 255, 0.5);
}


/* --- 2. OVERLAY NAVIGATION (Dark/Fixed) --- */
.overlay-navigation {
  position: fixed; 
  top: 0;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px var(--spacing-medium);
  background-color: rgba(26, 26, 26, 0.95); /* Darker background for floating element */
  box-shadow: 0 2px 10px rgba(0,0,0,0.5);
  z-index: 2000; 
  height: var(--nav-height);
  opacity: 0; 
  transform: translateY(-100%);
  transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}

.overlay-navigation.visible {
  opacity: 1;
  transform: translateY(0);
}

.overlay-navigation .logo {
  color: var(--color-primary-pink);
  font-size: 1.8em;
  font-weight: 700;
  letter-spacing: 2px;
}

.overlay-navigation ul {
  list-style: none;
  display: flex;
  gap: var(--spacing-medium);
}

.overlay-navigation a {
  color: var(--color-text-dark);
  font-weight: 400;
  padding: 5px 10px;
  position: relative;
}

.overlay-navigation a::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 3px;
  background-color: var(--color-primary-pink);
  transform: translateX(-50%);
  transition: width 0.3s ease-out;
}

.overlay-navigation a:hover::after, .overlay-navigation a:focus::after {
  width: 100%;
}

/* --- 3. HERO INTRO SECTION (Full-screen, centered) --- */
.hero-intro {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden; 
  perspective: 1000px;
}

.hero-name {
  font-size: clamp(2rem, 8vw, 4rem);
  font-weight: 800;
  color: var(--text-color);
  letter-spacing: 2px;
  margin-bottom: 2rem;
  position: relative;
  z-index: 100; 
  padding: 0.5rem 1rem;
  border: 2px solid transparent;
  border-radius: 12px;
  box-shadow: var(--terminal-shadow);
  background-color: rgba(17, 0, 28, 0.8);
  transition: all 0.5s ease;
}

/* --- TWO-STAGE GREETING CLASSES --- */
.hero-name.typing-code {
  font-family: var(--font-code);
  border-right-color: var(--color-primary-pink);
}
.hero-name.finished-typing-code {
  animation: blinkCodeCursor 0.75s step-end infinite;
  border-right: none;

}

.hero-name.name-reveal {
  font-family: var(--font-primary);
  color: var(--text-color);
  border-right: 3px solid var(--accent-color);
  width: auto;
  animation: none;
}

.hero-name.finished-typing-name {
  border-right-color: var(--color-primary-pink); 
  animation: blinkNameCursor 0.75s step-end infinite;
}

/* Name is fixed in place after all animations complete */
.hero-name.name-fixed {
  position: fixed;
  top: 50px;
  left: 50%;
  transform: translateX(-50%) scale(0.6);
  box-shadow: none;
  background-color: transparent;
  font-size: 2rem;
}

.hero-scroll-prompt {
  position: absolute;
  bottom: var(--spacing-medium);
  font-size: 1.1em;
  transition: opacity 1s ease 1s;

  color: var(--color-accent-pink);
  opacity: 0; 
  
  animation: bounce 2s infinite, fadeIn 1s forwards 2s; 
}

.arrow-down {
  display: block;
  text-align: center;
  animation: bounce 1.5s infinite;
}
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
  }
  40% {
      transform: translateY(-5px);
  }
  60% {
      transform: translateY(-2px);
  }
}
@keyframes blink-caret {
  from, to {
      border-color: transparent;
  }
  50% {
      border-color: var(--accent-color);
  }
}


/* --- 4. MAIN CONTENT LAYOUT (Single Column) --- */
main {
  max-width: 1000px; /* Max width for central content */
  margin: 0 auto;
  padding: var(--spacing-large) var(--spacing-medium);
  padding-top: var(--nav-height); 
}
.main-layout-container {
  display: grid;
  grid-template-columns: 300px 1fr; /* Fixed sidebar, flexible content */
  max-width: 1200px; 
  margin: 0 auto;
  padding: var(--spacing-large) var(--spacing-medium);
  padding-top: var(--nav-height); 
  gap: var(--spacing-large);
}

.content-area {
  padding-left: var(--spacing-medium); /* Space between sidebar and content */
}

/* Sidebar Styling */
.sidebar {
  position: sticky;
  top: calc(var(--nav-height) + 20px); /* Sticks below the navigation bar */
  align-self: start;
  padding: var(--spacing-medium);
  border-radius: var(--border-radius);
  background-color: var(--color-background-light); 
  border: 1px solid var(--color-code-bg);
  box-shadow: var(--shadow-deep);
}

.profile-section {
  text-align: center;
}

.scroll-reveal-target.active-scroll {
  opacity: 1;
  pointer-events: all;
  transform: translateY(0);
}

.flower-bed {
  padding-right: 0; 
}


/* Full Width Section Styling (Minimalist Boxes) */
.full-width-section {
  padding: var(--spacing-large) 0;
  margin-bottom: 0; 
  border-bottom: 1px solid var(--color-code-bg); 
  opacity: 0;
  pointer-events: none; 
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  transform: translateY(20px); 
}

.full-width-section.active-scroll {
  opacity: 1;
  pointer-events: all;
  transform: translateY(0);
}

.terminal-box {
  background-color: var(--color-background-dark);
  color: var(--color-text-dark);
}


/* Profile Section Styling */
#summary {
  text-align: center;
}
.profile-photo {
  width: 140px;
  height: 140px;
  border-radius: 50%;
  object-fit: cover;
  border: 4px;
  margin-bottom: 10px;
}

.profile-photo:hover {
  filter: grayscale(0%);
  transform: scale(1.05);
  box-shadow: 0 0 25px var(--color-primary-pink), 
              0 0 10px var(--color-primary-pink) inset;
}


.contact-links a {
  display: inline-block;
  margin: 10px 15px;
  color: var(--color-text-dim);
  transition: color 0.3s;
}
.contact-links a:hover {
  color: var(--color-primary-pink);
}

/* --- SKILLS & PROJECTS --- */
.skills-list {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  list-style: none;
}

.skill-tag { 
  background-color: var(--color-code-bg);
  color: var(--color-accent-pink);
  padding: 8px 15px;
  border-radius: 5px;
  font-size: 0.9em;
  font-weight: 600;
  border: 1px solid var(--color-primary-pink);
}

.skill-tag:hover {
  background-color: var(--color-primary-pink);
  color: var(--color-background-dark);
  transform: translateY(-3px) scale(1.05);
}

.projects-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-medium);
}

.project-card {
  border: 1px solid var(--color-code-bg);
  border-left: 5px solid var(--color-primary-pink); 
  border-radius: 5px;
  padding: 20px;
  background-color: var(--color-background-light);
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.project-card:hover {
  box-shadow: 0 0 0 2px var(--color-primary-pink);
  transform: translateY(-5px);
}

.cta-button {
  display: inline-block;
  background-color: var(--color-primary-pink);
  color: var(--color-background-dark);
  padding: 12px 25px;
  border-radius: 5px;
  font-weight: 600;
  border: none;
  cursor: pointer;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  margin-top: 15px;
}

.cta-button:hover {
  background-color: var(--color-accent-pink);
}

/* --- CONTACT FORM --- */
.contact-form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 15px;
  margin-top: var(--spacing-medium);
}

.contact-form input, .contact-form textarea {
  width: 100%;
  padding: 15px;
  border: 1px solid var(--color-code-bg);
  border-radius: 5px;
  font-family: var(--font-body);
  color: var(--color-text-dark);
  background-color: var(--color-background-light);
}
.contact-form input::placeholder, .contact-form textarea::placeholder {
  color: var(--color-text-dim);
}

.contact-form textarea {
  grid-column: 1 / -1;
  resize: vertical;
}



/* --- 5. FOOTER --- */
footer {
  text-align: center;
  padding: 30px;
  background-color: var(--color-background-dark);
  color: var(--color-text-dim);
  font-size: 0.9em;
}

/* --- 6. Cursor Petal/Glow CSS --- */
.cursor-petal {
  position: fixed;
  pointer-events: none; 
  background-color: #F0F0F0;
  border-radius: 50%; 
  z-index: 9999; 
  transition: opacity 1.5s ease-out, transform 1.5s ease-out;
  transform: translateY(0) rotate(0);
  box-shadow: 0 0 10px var(--color-primary-pink); 
}

/* --- 7. MEDIA QUERIES --- */
@media (max-width: 768px) {
  main {
      padding: var(--spacing-large) 1rem;
  }
  .projects-container {
      grid-template-columns: 1fr;
  }
  .contact-form {
      grid-template-columns: 1fr;
  }
  .main-layout-container {
      grid-template-columns: 1fr; /* Stack sidebar and content */
  }
  .sidebar {
      position: relative; /* Remove sticky on mobile */
      top: 0;
  }
}
